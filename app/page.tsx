"use client";

import React from "react";
import { useState } from "react";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs";
import { BookOpen, Brain, GraduationCap, Atom, Activity, Timer, Users, Trophy, Sparkles } from "lucide-react";
import Link from 'next/link'

interface ExamCard {
  title: string;
  description: string;
  icon: React.ReactNode;
  color: string;
  badge: string;
  users: string;
  questions: string;
  duration: string;
  category: string;
  link: string;
}

interface ExamCardComponentProps {
  card: ExamCard;
  index: number;
  hoveredCard: number | null;
  setHoveredCard: React.Dispatch<React.SetStateAction<number | null>>;
}

const ExamCardComponent: React.FC<ExamCardComponentProps> = ({ card, index, hoveredCard, setHoveredCard }) => (
  <Card
    className={`relative transform transition-all duration-300 hover:shadow-xl ${
      hoveredCard === index ? 'scale-105' : ''
    } ${card.category === 'ai' ? 'ring-2 ring-blue-500 ring-opacity-50' : ''}`}
    onMouseEnter={() => setHoveredCard(index)}
    onMouseLeave={() => setHoveredCard(null)}
  >
    <CardHeader>
      <div className="flex justify-between items-start mb-4">
        <div className={`p-2 rounded-lg bg-gray-100 ${card.color}`}>
          {card.icon}
        </div>
        <Badge variant="secondary" className={`${card.category === 'ai' ? 'bg-blue-100 text-blue-700' : 'bg-gray-100'}`}>
          {card.badge}
        </Badge>
      </div>
      <CardTitle className="text-xl mb-2">{card.title}</CardTitle>
      <CardDescription>{card.description}</CardDescription>
    </CardHeader>
    <CardContent>
      <div className="grid grid-cols-3 gap-2 my-4 text-sm">
        <div className="text-center p-2 bg-gray-50 rounded">
          <Timer className="h-4 w-4 mx-auto mb-1" />
          <span className="block text-gray-600">{card.duration}</span>
        </div>
        <div className="text-center p-2 bg-gray-50 rounded">
          <Users className="h-4 w-4 mx-auto mb-1" />
          <span className="block text-gray-600">{card.users}</span>
        </div>
        <div className="text-center p-2 bg-gray-50 rounded">
          <BookOpen className="h-4 w-4 mx-auto mb-1" />
          <span className="block text-gray-600">{card.questions}</span>
        </div>
      </div>
    </CardContent>
    <CardFooter>
      <Link href={card.link}>
      <Button 
        className={`w-full ${
          card.category === 'ai' 
            ? 'bg-gradient-to-r from-blue-600 to-blue-800' 
            : 'bg-gradient-to-r from-blue-600 to-purple-600'
        } hover:opacity-90 transition-all duration-300`}
      >
        Start Now
      </Button>
      </Link>
    </CardFooter>
  </Card>
);

export default function HomePage() {
  const [hoveredCard, setHoveredCard] = useState<number | null>(null);

  const examCards: ExamCard[] = [
    {
      title: "AI-Generated Quiz",
      description: "Personalized quizzes generated by AI on any topic. Choose your subject and difficulty level to start practicing!",
      icon: <Brain className="h-6 w-6" />,
      color: "text-blue-500",
      badge: "Featured",
      users: "10k+",
      questions: "1000+",
      duration: "30 min",
      category: "ai",
      link: "/ai-quiz"
    },
    // {
    //   title: "AI Subject Master",
    //   description: "Advanced AI-powered learning paths tailored to your strengths and weaknesses in each subject.",
    //   icon: <Sparkles className="h-6 w-6" />,
    //   color: "text-blue-500",
    //   badge: "New",
    //   users: "5k+",
    //   questions: "2000+",
    //   duration: "Flexible",
    //   category: "ai"
    // },
    {
      title: "JEE Mock Test",
      description: "Comprehensive mock tests following the latest JEE pattern with detailed analytics and performance tracking.",
      icon: <Atom className="h-6 w-6" />,
      color: "text-green-500",
      badge: "Updated",
      users: "50k+",
      questions: "5000+",
      duration: "3 hrs",
      category: "engineering",
      link: "/Jeemocktest"

    },
    {
      title: "NEET Mock Test",
      description: "Practice with NEET-style questions covering Physics, Chemistry, and Biology. Get detailed explanations.",
      icon: <GraduationCap className="h-6 w-6" />,
      color: "text-purple-500",
      badge: "Popular",
      users: "30k+",
      questions: "3000+",
      duration: "3 hrs",
      category: "medical",
      link: "/Neetmocktest"

    },
    {
      title: "GRE Mock Test(coming soon)",
      description: "Full-length GRE practice tests with Verbal, Quantitative, and Analytical Writing sections.",
      icon: <BookOpen className="h-6 w-6" />,
      color: "text-red-500",
      badge: "Premium",
      users: "20k+",
      questions: "2000+",
      duration: "4 hrs",
      category: "abroad",
      link: "#"

    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-b from-gray-50 to-gray-100">
      {/* Hero Section with AI Emphasis */}
      <div className="container mx-auto px-4 py-16 text-center">
        <div className="max-w-3xl mx-auto mb-16">
          <div className="inline-flex items-center gap-2 bg-blue-50 text-blue-600 px-4 py-2 rounded-full mb-6">
            <Sparkles className="h-4 w-4" />
            <span>Powered by Advanced AI</span>
          </div>
          <h1 className="text-4xl md:text-6xl font-bold mb-6 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600">
            Your Path to Exam Success
          </h1>
          <p className="text-lg md:text-xl text-gray-600 mb-8">
            Experience the future of learning with AI-powered quizzes and comprehensive mock tests
          </p>
          <div className="flex justify-center gap-4 mb-8">
            <div className="flex items-center gap-2">
              <Users className="text-blue-500" />
              <span className="text-gray-600">100K+ Students</span>
            </div>
            <div className="flex items-center gap-2">
              <Trophy className="text-yellow-500" />
              <span className="text-gray-600">95% Success Rate</span>
            </div>
            <div className="flex items-center gap-2">
              <Activity className="text-green-500" />
              <span className="text-gray-600">Live Progress Tracking</span>
            </div>
          </div>
        </div>

        {/* Navigation Tabs */}
        <Tabs defaultValue="all" className="mb-8">
          <TabsList className="grid w-full max-w-2xl mx-auto grid-cols-5">
            <TabsTrigger value="all">All Tests</TabsTrigger>
            <TabsTrigger value="ai" className="relative">
              AI Tools
              <span className="absolute -top-1 -right-1 flex h-3 w-3">
                <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-blue-400 opacity-75"></span>
                <span className="relative inline-flex rounded-full h-3 w-3 bg-blue-500"></span>
              </span>
            </TabsTrigger>
            <TabsTrigger value="engineering">Engineering</TabsTrigger>
            <TabsTrigger value="medical">Medical</TabsTrigger>
            <TabsTrigger value="abroad">Study Abroad</TabsTrigger>
          </TabsList>

          {/* Tab Content */}
          <TabsContent value="all">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {examCards.map((card, index) => (
                <ExamCardComponent key={index} card={card} index={index} hoveredCard={hoveredCard} setHoveredCard={setHoveredCard} />
              ))}
            </div>
          </TabsContent>

          {["ai", "engineering", "medical", "abroad"].map((category) => (
            <TabsContent key={category} value={category}>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {examCards
                  .filter((card) => card.category === category)
                  .map((card, index) => (
                    <ExamCardComponent key={index} card={card} index={index} hoveredCard={hoveredCard} setHoveredCard={setHoveredCard} />
                  ))}
              </div>
            </TabsContent>
          ))}
        </Tabs>

        {/* AI Features Section */}
        <div className="mt-16 p-6 bg-blue-50 rounded-2xl">
          <h2 className="text-2xl font-bold mb-8">Why Choose AI-Powered Learning?</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div className="p-6 bg-white rounded-lg shadow-md">
              <Brain className="h-8 w-8 text-blue-500 mb-4" />
              <h3 className="text-lg font-semibold mb-2">Personalized Learning</h3>
              <p className="text-gray-600">Questions adapt to your skill level and learning pace</p>
            </div>
            <div className="p-6 bg-white rounded-lg shadow-md">
              <Activity className="h-8 w-8 text-blue-500 mb-4" />
              <h3 className="text-lg font-semibold mb-2">Smart Analytics</h3>
              <p className="text-gray-600">AI-driven insights into your performance patterns</p>
            </div>
            <div className="p-6 bg-white rounded-lg shadow-md">
              <Sparkles className="h-8 w-8 text-blue-500 mb-4" />
              <h3 className="text-lg font-semibold mb-2">Intelligent Feedback</h3>
              <p className="text-gray-600">Real-time explanations and improvement suggestions</p>
            </div>
          </div>
        </div>
       
      </div>
      <footer className="bg-gray-900 text-white text-center p-4">
      <p>Â©  Developed by{" "}
        <a href="https://vishnumarripalli.vercel.app" className="text-blue-400 hover:underline">
          Vishnuvardhan Marripalli
        </a>
      </p>
    </footer>
    </div>
  );
}